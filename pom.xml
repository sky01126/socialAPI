<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ha.social</groupId>
	<artifactId>socialAPI</artifactId>
	<version>1.0.0.RELEASE</version>
	<name>socialAPI</name>
	<description>Social API Project for Spring Boot</description>
    <url>https://www.kthcorp.com</url>
    <organization>
        <name>Copyright(C) KT Hitel Co., Ltd. all rights reserved.</name>
        <url>https://www.kthcorp.com</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <scm>
        <url>https://stash.kthcorp.com/scm/maven/kthcorp-config-server</url>
    </scm>
	<properties>
        <java.version>1.8</java.version>
        <source.encoding>UTF-8</source.encoding>
        <resource.delimiter>@</resource.delimiter>
        <project.build.sourceEncoding>${source.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${source.encoding}</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- 배포 서버 환경 - local, dev, prod -->
        <env>local</env>

        <!-- 빌프 Final 프로젝트명 -->
        <finalName>ROOT</finalName>

        <!-- Context Root Setting - ROOT는 "/"로 설정 -->
        <m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>

        <!-- ==================== Spring Boot Cloud ==================== -->
		<spring-cloud.version>Greenwich.RC2</spring-cloud.version>

        <!-- ==================== Third Party ==================== -->
        <jjwt.version>0.9.1</jjwt.version>

        <!-- ==================== SonarQube에서 분석 제외 파일 설정 (공백없이 설정) ==================== -->
        <sonar.exclusions>pom.xml,**/package-info.java,**/Application.java,**/*CacheConfiguration.java,**/DataSource*Configuration.java,**/LifecycleConfiguration.java,**/Property.java,**/ServletInitializer.java,**/SwaggerConfiguration.java,**/WebMvcConfiguration.java,**/CustomModelAttributeArgumentResolver.java,**/GlobalControllerExceptionHandler.java,**/*Test*.java,**/**.css,**/**.js,**/**.jsp,**/**.html</sonar.exclusions>
    </properties>
	<dependencies>
        <!-- ==================== Spring Boot ==================== -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

        <!-- ==================== Spring Boot Cloud ==================== -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>

        <!-- ==================== Third Party ==================== -->
        <!-- Jackson Library -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>
        <!-- Ehcache -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>

        <!-- Json Web Token -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>

        <!-- Joda Time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <!-- AspectJ - Configuration 설정 시 EnableAspectJAutoProxy 사용 시 필요. -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Spring MVC 에 JSR 303 Bean Validator 적용 시 Hibernate Validator가 없으면 에러 발생. -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
        </dependency>

        <!-- ==================== Web Jars versions ==================== -->
        <!-- Web Jars의 정확한 버전을 몰라도 사용할 수 있도록한다. ex. /webjars/jquery/jquery.min.js -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${source.encoding}</encoding>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgument>-Xlint:all</compilerArgument>
                </configuration>
            </plugin>
            <!-- Maven 빌드 시 테스트코드의 컴파일 및 실행 안함. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
</project>
